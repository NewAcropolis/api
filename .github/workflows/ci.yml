on: [push, pull_request]

jobs:
  build_test_deploy:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:9.5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: na_api_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      TEST_DATABASE_URI: postgresql://postgres@localhost/na_api_test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Setup dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client
          sudo apt-get install build-essential libpoppler-cpp-dev pkg-config
          sudo apt-get install ghostscript
          sudo mv /etc/ImageMagick-6/policy.xml /etc/ImageMagick-6/policy.xml.off

          ./scripts/bootstrap.sh
      #     pip install coveralls
      # - name: Run tests
      #   run: ./scripts/run_tests.sh
      # - name: Coveralls
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to test
        if: github.ref == 'refs/heads/test-deploy'
        env: # Or as an environment variable
          deploy_host_development: ${{ secrets.DEPLOY_HOST_DEVELOPMENT }}
          user_development: ${{ secrets.USER_DEVELOPMENT }}
          DEPLOY_KEY_development: ${{ secrets.DEPLOY_KEY_DEVELOPMENT }}
          ADMIN_CLIENT_ID_development: ${{ secrets.ADMIN_CLIENT_ID_DEVELOPMENT }}
          ADMIN_CLIENT_SECRET_development: ${{ secrets.ADMIN_CLIENT_SECRET_DEVELOPMENT }}
          ADMIN_USERS_development: ${{ secrets.ADMIN_USERS_DEVELOPMENT }}
          DATABASE_URL_development: ${{ secrets.DATABASE_URL_DEVELOPMENT }}
          PAYPAL_URL_development: ${{ secrets.PAYPAL_URL_DEVELOPMENT }}
          PAYPAL_USER_development: ${{ secrets.PAYPAL_USER_DEVELOPMENT }}
          PAYPAL_PASSWORD_development: ${{ secrets.PAYPAL_PASSWORD_DEVELOPMENT }}
          PAYPAL_SIG_development: ${{ secrets.PAYPAL_SIG_DEVELOPMENT }}
          PAYPAL_RECEIVER_development: ${{ secrets.PAYPAL_RECEIVER_DEVELOPMENT }}
          PAYPAL_VERIFY_URL_development: ${{ secrets.PAYPAL_VERIFY_URL_DEVELOPMENT }}
          EMAIL_TOKENS: ${{ secrets.EMAIL_TOKENS }}
          EMAIL_ANYTIME: 1
          EMAIL_SALT_development: ${{ secrets.EMAIL_SALT_DEVELOPMENT }}
          EMAIL_UNSUB_SALT_development: ${{ secrets.EMAIL_UNSUB_SALT_DEVELOPMENT }}
          TEST_EMAIL_development: ${{ secrets.TEST_EMAIL_DEVELOPMENT }}
          EMAIL_RESTRICT_development: 1
          FRONTEND_ADMIN_URL_development: ${{ secrets.FRONTEND_ADMIN_URL_DEVELOPMENT }}
          API_BASE_URL_development: ${{ secrets.API_BASE_URL_DEVELOPMENT }}
          FRONTEND_URL_development: ${{ secrets.FRONTEND_URL_DEVELOPMENT }}
          IMAGES_URL_development: ${{ secrets.IMAGES_URL_DEVELOPMENT }}
          CELERY_BROKER_URL_development: ${{ secrets.CELERY_BROKER_URL_DEVELOPMENT }}
          PROJECT_development: ${{ secrets.PROJECT_DEVELOPMENT }}
          JWT_SECRET_development: ${{ secrets.JWT_SECRET_DEVELOPMENT }}
          # GA_ID_development: ${{ secrets.GA_ID_DEVELOPMENT }}
          # INSTAGRAM_URL: ${{ secrets.INSTAGRAM_URL }}
          # RESTART_CELERY: ${{ secrets.RESTART_CELERY_DEVELOPMENT }}
          GOOGLE_APPLICATION_CREDENTIALS_development: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DEVELOPMENT }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_USER_development: ${{ secrets.SMTP_USER_DEVELOPMENT }}
          SMTP_PASS_development: ${{ secrets.SMTP_PASS_DEVELOPMENT }}
          
        run: |
          ./scripts/deploy.sh development
  deploy_to_test:
    environment: test
    needs: build_test_deploy
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Deploy to test
        # if: github.ref == 'refs/heads/test-deploy'
        env:
          deploy_host_development: ${{ secrets.DEPLOY_HOST }}
          user_development: ${{ secrets.USER }}
          DEPLOY_KEY_development: ${{ secrets.DEPLOY_KEY }}
          ADMIN_CLIENT_ID_development: ${{ secrets.ADMIN_CLIENT_ID }}
          ADMIN_CLIENT_SECRET_development: ${{ secrets.ADMIN_CLIENT_SECRET }}
          ADMIN_USERS_development: ${{ secrets.ADMIN_USERS }}
          DATABASE_URL_development: ${{ secrets.DATABASE_URL }}
          PAYPAL_URL_development: ${{ secrets.PAYPAL_URL }}
          PAYPAL_USER_development: ${{ secrets.PAYPAL_USER }}
          PAYPAL_PASSWORD_development: ${{ secrets.PAYPAL_PASSWORD }}
          PAYPAL_SIG_development: ${{ secrets.PAYPAL_SIG }}
          PAYPAL_RECEIVER_development: ${{ secrets.PAYPAL_RECEIVER }}
          PAYPAL_VERIFY_URL_development: ${{ secrets.PAYPAL_VERIFY_URL }}
          EMAIL_TOKENS: ${{ secrets.EMAIL_TOKENS }}
          EMAIL_ANYTIME: 1
          EMAIL_SALT_development: ${{ secrets.EMAIL_SALT }}
          EMAIL_UNSUB_SALT_development: ${{ secrets.EMAIL_UNSUB_SALT }}
          TEST_EMAIL_development: ${{ secrets.TEST_EMAIL }}
          EMAIL_RESTRICT_development: 1
          FRONTEND_ADMIN_URL_development: ${{ secrets.FRONTEND_ADMIN_URL }}
          API_BASE_URL_development: ${{ secrets.API_BASE_URL }}
          FRONTEND_URL_development: ${{ secrets.FRONTEND_URL }}
          IMAGES_URL_development: ${{ secrets.IMAGES_URL }}
          CELERY_BROKER_URL_development: ${{ secrets.CELERY_BROKER_URL }}
          PROJECT_development: ${{ secrets.PROJECT }}
          JWT_SECRET_development: ${{ secrets.JWT_SECRET }}
          # GA_ID_development: ${{ secrets.GA_ID_DEVELOPMENT }}
          # INSTAGRAM_URL: ${{ secrets.INSTAGRAM_URL }}
          # RESTART_CELERY: ${{ secrets.RESTART_CELERY_DEVELOPMENT }}
          GOOGLE_APPLICATION_CREDENTIALS_development: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_USER_development: ${{ secrets.SMTP_USER }}
          SMTP_PASS_development: ${{ secrets.SMTP_PASS }}
          
        run: |
          pip install celery==4.3.0
          ./scripts/deploy.sh development


