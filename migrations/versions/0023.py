"""empty message

Revision ID: 0023 add event state
Revises: 0022 add end time to event_date
Create Date: 2019-05-09 00:42:01.349968

"""

# revision identifiers, used by Alembic.
revision = '0023 add event state'
down_revision = '0022 add end time to event_date'

from alembic import op
import sqlalchemy as sa

from app.models import DRAFT, READY, APPROVED, REJECTED


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_states',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )

    EVENT_STATES = [DRAFT, READY, APPROVED, REJECTED]

    for state in EVENT_STATES:
        op.execute(
            "INSERT INTO event_states (name) VALUES ('{}')".format(state)
        )

    op.add_column(u'events', sa.Column('event_state', sa.String(length=255), nullable=True))
    op.create_index(op.f('ix_events_event_state'), 'events', ['event_state'], unique=False)
    op.create_foreign_key(None, 'events', 'event_states', ['event_state'], ['name'])

    # # set all past events to approved
    op.execute(
        "UPDATE events SET event_state = '{}' "
        "WHERE NOW() > (SELECT event_datetime FROM event_dates WHERE "
        "event_id = events.id order by event_datetime DESC limit 1)".format(APPROVED)
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.drop_index(op.f('ix_events_event_state'), table_name='events')
    op.drop_column(u'events', 'event_state')
    op.drop_table('event_states')
    # ### end Alembic commands ###
