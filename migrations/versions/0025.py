"""empty message

Revision ID: 0025 add email and email types
Revises: 0024 add reject reason
Create Date: 2019-06-20 00:01:13.441215

"""

# revision identifiers, used by Alembic.
revision = '0025 add email and email types'
down_revision = '0024 add reject reason'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from app.models import EMAIL_TYPES


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_types',
    sa.Column('email_type', sa.String(), nullable=False),
    sa.Column('template', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('email_type')
    )

    for email_type in EMAIL_TYPES:
        op.execute(
            "INSERT INTO email_types (email_type) VALUES ('{}')".format(email_type)
        )

    op.create_table('emails',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('event_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('old_id', sa.Integer(), nullable=True),
    sa.Column('old_event_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('extra_txt', sa.String(), nullable=True),
    sa.Column('replace_all', sa.Boolean(), nullable=True),
    sa.Column('email_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['email_type'], ['email_types.email_type'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emails_email_type'), 'emails', ['email_type'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_emails_email_type'), table_name='emails')
    op.drop_table('emails')
    op.drop_table('email_types')
    # ### end Alembic commands ###
